

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Jun 21 00:32:00 2024

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.41
    16                           ; Generated 25/01/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0008                     _PORTDbits	set	8
   110  0006                     _PORTBbits	set	6
   111  000E                     _TMR1L	set	14
   112  000F                     _TMR1H	set	15
   113  0010                     _T1CON	set	16
   114  0009                     _PORTEbits	set	9
   115  0008                     _PORTD	set	8
   116  0080                     _TMR1ON	set	128
   117  0086                     _TRISB	set	134
   118  0089                     _TRISE	set	137
   119  0088                     _TRISD	set	136
   120                           
   121                           	psect	strings
   122  0003                     __pstrings:	
   123  0003                     stringtab:	
   124  0003                     __stringtab:	
   125  0003                     stringcode:	
   126                           ;	String table - string pointers are 1 byte each
   127                           
   128  0003                     stringdir:	
   129  0003  3000               	movlw	high stringdir
   130  0004  008A               	movwf	10
   131  0005  0804               	movf	4,w
   132  0006  0A84               	incf	4,f
   133  0007  0782               	addwf	2,f
   134  0008                     __stringbase:	
   135  0008  3400               	retlw	0
   136  0009                     __end_of__stringtab:	
   137  0009                     STR_1:	
   138  0009  3474               	retlw	116	;'t'
   139  000A  3465               	retlw	101	;'e'
   140  000B  3473               	retlw	115	;'s'
   141  000C  3474               	retlw	116	;'t'
   142  000D  3432               	retlw	50	;'2'
   143  000E  3400               	retlw	0
   144  0009                     
   145                           ; #config settings
   146  0000                     
   147                           	psect	cinit
   148  07FC                     start_initialization:	
   149  07FC                     __initialization:	
   150  07FC                     end_of_initialization:	
   151                           ;End of C runtime variable initialization code
   152                           
   153  07FC                     __end_of__initialization:	
   154  07FC  0183               	clrf	3
   155  07FD  120A  118A  2F54   	ljmp	_main	;jump to C main() function
   156                           
   157                           	psect	cstackCOMMON
   158  0070                     __pcstackCOMMON:	
   159  0070                     ?_lcd_command:	
   160  0070                     ??_lcd_command:	
   161                           ; 1 bytes @ 0x0
   162                           
   163  0070                     ?_lcd_data:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  0070                     ??_lcd_data:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0070                     ?_lcd_init:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  0070                     ?_main:	
   173                           ; 1 bytes @ 0x0
   174                           
   175  0070                     ?___awdiv:	
   176                           ; 1 bytes @ 0x0
   177                           
   178  0070                     ___awdiv@divisor:	
   179                           ; 2 bytes @ 0x0
   180                           
   181                           
   182                           ; 2 bytes @ 0x0
   183  0070                     	ds	2
   184  0072                     lcd_command@cmd:	
   185  0072                     lcd_data@data:	
   186                           ; 1 bytes @ 0x2
   187                           
   188  0072                     ___awdiv@dividend:	
   189                           ; 1 bytes @ 0x2
   190                           
   191                           
   192                           ; 2 bytes @ 0x2
   193  0072                     	ds	1
   194  0073                     ??_lcd_init:	
   195  0073                     ?_lcd_str:	
   196                           ; 1 bytes @ 0x3
   197                           
   198  0073                     lcd_str@n:	
   199                           ; 1 bytes @ 0x3
   200                           
   201                           
   202                           ; 1 bytes @ 0x3
   203  0073                     	ds	1
   204  0074                     ??_lcd_str:	
   205  0074                     ??___awdiv:	
   206                           ; 1 bytes @ 0x4
   207                           
   208                           
   209                           ; 1 bytes @ 0x4
   210  0074                     	ds	1
   211  0075                     lcd_str@str:	
   212  0075                     ___awdiv@counter:	
   213                           ; 1 bytes @ 0x5
   214                           
   215                           
   216                           ; 1 bytes @ 0x5
   217  0075                     	ds	1
   218  0076                     lcd_str@i:	
   219  0076                     ___awdiv@sign:	
   220                           ; 1 bytes @ 0x6
   221                           
   222                           
   223                           ; 1 bytes @ 0x6
   224  0076                     	ds	1
   225  0077                     ___awdiv@quotient:	
   226                           
   227                           ; 2 bytes @ 0x7
   228  0077                     	ds	2
   229  0079                     ??_main:	
   230                           
   231                           ; 1 bytes @ 0x9
   232  0079                     	ds	3
   233  007C                     main@distance:	
   234                           
   235                           ; 2 bytes @ 0xC
   236  007C                     	ds	2
   237                           
   238                           	psect	maintext
   239  0754                     __pmaintext:	
   240 ;;
   241 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   242 ;;
   243 ;; *************** function _main *****************
   244 ;; Defined at:
   245 ;;		line 79 in file "ProjectClear.c"
   246 ;; Parameters:    Size  Location     Type
   247 ;;		None
   248 ;; Auto vars:     Size  Location     Type
   249 ;;  distance        2   12[COMMON] unsigned int 
   250 ;; Return value:  Size  Location     Type
   251 ;;                  1    wreg      void 
   252 ;; Registers used:
   253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   254 ;; Tracked objects:
   255 ;;		On entry : B00/0
   256 ;;		On exit  : 0/0
   257 ;;		Unchanged: 0/0
   258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   259 ;;      Params:         0       0       0       0       0
   260 ;;      Locals:         2       0       0       0       0
   261 ;;      Temps:          3       0       0       0       0
   262 ;;      Totals:         5       0       0       0       0
   263 ;;Total ram usage:        5 bytes
   264 ;; Hardware stack levels required when called:    2
   265 ;; This function calls:
   266 ;;		___awdiv
   267 ;;		_lcd_command
   268 ;;		_lcd_init
   269 ;;		_lcd_str
   270 ;; This function is called by:
   271 ;;		Startup code after reset
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           
   275                           
   276                           ;psect for function _main
   277  0754                     _main:	
   278                           
   279                           ;ProjectClear.c: 80: TRISD = 0x00;
   280                           
   281                           ;incstack = 0
   282                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   283  0754  1683               	bsf	3,5	;RP0=1, select bank1
   284  0755  1303               	bcf	3,6	;RP1=0, select bank1
   285  0756  0188               	clrf	8	;volatile
   286                           
   287                           ;ProjectClear.c: 82: TRISE = 0x00;
   288  0757  0189               	clrf	9	;volatile
   289                           
   290                           ;ProjectClear.c: 84: TRISB = 0b00100000;
   291  0758  3020               	movlw	32
   292  0759  0086               	movwf	6	;volatile
   293                           
   294                           ;ProjectClear.c: 86: T1CON = 0x10;
   295  075A  3010               	movlw	16
   296  075B  1283               	bcf	3,5	;RP0=0, select bank0
   297  075C  1303               	bcf	3,6	;RP1=0, select bank0
   298  075D  0090               	movwf	16	;volatile
   299                           
   300                           ;ProjectClear.c: 88: lcd_init();
   301  075E  120A  118A  2675  120A  118A  	fcall	_lcd_init
   302                           
   303                           ;ProjectClear.c: 89: _delay((unsigned long)((50)*(20000000/4000.0)));
   304  0763  3002               	movlw	2
   305  0764  00FB               	movwf	??_main+2
   306  0765  3045               	movlw	69
   307  0766  00FA               	movwf	??_main+1
   308  0767  30A9               	movlw	169
   309  0768  00F9               	movwf	??_main
   310  0769                     u337:	
   311  0769  0BF9               	decfsz	??_main,f
   312  076A  2F69               	goto	u337
   313  076B  0BFA               	decfsz	??_main+1,f
   314  076C  2F69               	goto	u337
   315  076D  0BFB               	decfsz	??_main+2,f
   316  076E  2F69               	goto	u337
   317  076F  2F70               	nop2
   318  0770                     l713:	
   319                           ;ProjectClear.c: 93: while (1) {
   320                           
   321                           
   322                           ;ProjectClear.c: 95: lcd_command(0x81);
   323  0770  3081               	movlw	129
   324  0771  120A  118A  269D  120A  118A  	fcall	_lcd_command
   325                           
   326                           ;ProjectClear.c: 96: lcd_str("test2",5);
   327  0776  3005               	movlw	5
   328  0777  00F9               	movwf	??_main
   329  0778  0879               	movf	??_main,w
   330  0779  00F3               	movwf	lcd_str@n
   331  077A  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   332  077B  120A  118A  265D  120A  118A  	fcall	_lcd_str
   333                           
   334                           ;ProjectClear.c: 97: _delay((unsigned long)((50)*(20000000/4000.0)));
   335  0780  3002               	movlw	2
   336  0781  00FB               	movwf	??_main+2
   337  0782  3045               	movlw	69
   338  0783  00FA               	movwf	??_main+1
   339  0784  30A9               	movlw	169
   340  0785  00F9               	movwf	??_main
   341  0786                     u347:	
   342  0786  0BF9               	decfsz	??_main,f
   343  0787  2F86               	goto	u347
   344  0788  0BFA               	decfsz	??_main+1,f
   345  0789  2F86               	goto	u347
   346  078A  0BFB               	decfsz	??_main+2,f
   347  078B  2F86               	goto	u347
   348  078C  2F8D               	nop2
   349                           
   350                           ;ProjectClear.c: 99: lcd_command(0xC1);
   351  078D  30C1               	movlw	193
   352  078E  120A  118A  269D  120A  118A  	fcall	_lcd_command
   353                           
   354                           ;ProjectClear.c: 100: lcd_str("test2",5);
   355  0793  3005               	movlw	5
   356  0794  00F9               	movwf	??_main
   357  0795  0879               	movf	??_main,w
   358  0796  00F3               	movwf	lcd_str@n
   359  0797  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   360  0798  120A  118A  265D  120A  118A  	fcall	_lcd_str
   361                           
   362                           ;ProjectClear.c: 101: _delay((unsigned long)((50)*(20000000/4000.0)));
   363  079D  3002               	movlw	2
   364  079E  00FB               	movwf	??_main+2
   365  079F  3045               	movlw	69
   366  07A0  00FA               	movwf	??_main+1
   367  07A1  30A9               	movlw	169
   368  07A2  00F9               	movwf	??_main
   369  07A3                     u357:	
   370  07A3  0BF9               	decfsz	??_main,f
   371  07A4  2FA3               	goto	u357
   372  07A5  0BFA               	decfsz	??_main+1,f
   373  07A6  2FA3               	goto	u357
   374  07A7  0BFB               	decfsz	??_main+2,f
   375  07A8  2FA3               	goto	u357
   376  07A9  2FAA               	nop2
   377                           
   378                           ;ProjectClear.c: 102: unsigned int distance;
   379                           ;ProjectClear.c: 104: TMR1H =0;
   380  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   381  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   382  07AC  018F               	clrf	15	;volatile
   383                           
   384                           ;ProjectClear.c: 105: TMR1L = 0;
   385  07AD  018E               	clrf	14	;volatile
   386                           
   387                           ;ProjectClear.c: 107: PORTBbits.RB4 = 1;
   388  07AE  1606               	bsf	6,4	;volatile
   389                           
   390                           ;ProjectClear.c: 108: _delay((unsigned long)((10)*(20000000/4000000.0)));
   391  07AF  3010               	movlw	16
   392  07B0  00F9               	movwf	??_main
   393  07B1                     u367:	
   394  07B1  0BF9               	decfsz	??_main,f
   395  07B2  2FB1               	goto	u367
   396  07B3  0000               	nop
   397                           
   398                           ;ProjectClear.c: 109: PORTBbits.RB4 = 0;
   399  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   400  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   401  07B6  1206               	bcf	6,4	;volatile
   402  07B7                     l43:	
   403                           ;ProjectClear.c: 111: while (!PORTBbits.RB5);
   404                           
   405  07B7  1E86               	btfss	6,5	;volatile
   406  07B8  2FB7               	goto	l43
   407                           
   408                           ;ProjectClear.c: 112: TMR1ON = 1;
   409  07B9  1410               	bsf	16,0	;volatile
   410  07BA                     l46:	
   411                           ;ProjectClear.c: 113: while (PORTBbits.RB5);
   412                           
   413  07BA  1A86               	btfsc	6,5	;volatile
   414  07BB  2FBA               	goto	l46
   415                           
   416                           ;ProjectClear.c: 114: TMR1ON = 0;
   417  07BC  1010               	bcf	16,0	;volatile
   418                           
   419                           ;ProjectClear.c: 115: distance = ((TMR1L | (TMR1H << 8)) / 58)+1;
   420  07BD  303A               	movlw	58
   421  07BE  00F0               	movwf	___awdiv@divisor
   422  07BF  3000               	movlw	0
   423  07C0  00F1               	movwf	___awdiv@divisor+1
   424  07C1  080F               	movf	15,w	;volatile
   425  07C2  00F9               	movwf	??_main
   426  07C3  01FA               	clrf	??_main+1
   427  07C4  0879               	movf	??_main,w
   428  07C5  00FA               	movwf	??_main+1
   429  07C6  01F9               	clrf	??_main
   430  07C7  0879               	movf	??_main,w
   431  07C8  040E               	iorwf	14,w	;volatile
   432  07C9  00F2               	movwf	___awdiv@dividend
   433  07CA  087A               	movf	??_main+1,w
   434  07CB  00F3               	movwf	___awdiv@dividend+1
   435  07CC  120A  118A  26FB  120A  118A  	fcall	___awdiv
   436  07D1  0870               	movf	?___awdiv,w
   437  07D2  3E01               	addlw	1
   438  07D3  00FC               	movwf	main@distance
   439  07D4  0871               	movf	?___awdiv+1,w
   440  07D5  1803               	skipnc
   441  07D6  3E01               	addlw	1
   442  07D7  3E00               	addlw	0
   443  07D8  00FD               	movwf	main@distance+1
   444                           
   445                           ;ProjectClear.c: 120: if (distance < 20 && distance > 1) {
   446  07D9  3000               	movlw	0
   447  07DA  027D               	subwf	main@distance+1,w
   448  07DB  3014               	movlw	20
   449  07DC  1903               	skipnz
   450  07DD  027C               	subwf	main@distance,w
   451  07DE  1803               	skipnc
   452  07DF  2FEB               	goto	l49
   453  07E0  3000               	movlw	0
   454  07E1  027D               	subwf	main@distance+1,w
   455  07E2  3002               	movlw	2
   456  07E3  1903               	skipnz
   457  07E4  027C               	subwf	main@distance,w
   458  07E5  1C03               	skipc
   459  07E6  2FEB               	goto	l49
   460                           
   461                           ;ProjectClear.c: 121: PORTDbits.RD2 = 1;
   462  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   463  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   464  07E9  1508               	bsf	8,2	;volatile
   465                           
   466                           ;ProjectClear.c: 122: } else {
   467  07EA  2FEE               	goto	l743
   468  07EB                     l49:	
   469                           
   470                           ;ProjectClear.c: 123: PORTDbits.RD2 = 0;
   471  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   472  07EC  1303               	bcf	3,6	;RP1=0, select bank0
   473  07ED  1108               	bcf	8,2	;volatile
   474  07EE                     l743:	
   475                           
   476                           ;ProjectClear.c: 124: }
   477                           ;ProjectClear.c: 126: _delay((unsigned long)((100)*(20000000/4000.0)));
   478  07EE  3003               	movlw	3
   479  07EF  00FB               	movwf	??_main+2
   480  07F0  308A               	movlw	138
   481  07F1  00FA               	movwf	??_main+1
   482  07F2  3055               	movlw	85
   483  07F3  00F9               	movwf	??_main
   484  07F4                     u377:	
   485  07F4  0BF9               	decfsz	??_main,f
   486  07F5  2FF4               	goto	u377
   487  07F6  0BFA               	decfsz	??_main+1,f
   488  07F7  2FF4               	goto	u377
   489  07F8  0BFB               	decfsz	??_main+2,f
   490  07F9  2FF4               	goto	u377
   491  07FA  2FFB               	nop2
   492  07FB  2F70               	goto	l713
   493  07FC                     __end_of_main:	
   494                           ;ProjectClear.c: 127: }
   495                           ;ProjectClear.c: 128: return;
   496                           
   497                           
   498                           	psect	text1
   499  065D                     __ptext1:	
   500 ;; *************** function _lcd_str *****************
   501 ;; Defined at:
   502 ;;		line 70 in file "ProjectClear.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;  str             1    wreg     PTR const unsigned char 
   505 ;;		 -> STR_2(6), STR_1(6), 
   506 ;;  n               1    3[COMMON] unsigned char 
   507 ;; Auto vars:     Size  Location     Type
   508 ;;  str             1    5[COMMON] PTR const unsigned char 
   509 ;;		 -> STR_2(6), STR_1(6), 
   510 ;;  i               1    6[COMMON] unsigned char 
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   520 ;;      Params:         1       0       0       0       0
   521 ;;      Locals:         2       0       0       0       0
   522 ;;      Temps:          1       0       0       0       0
   523 ;;      Totals:         4       0       0       0       0
   524 ;;Total ram usage:        4 bytes
   525 ;; Hardware stack levels used:    1
   526 ;; Hardware stack levels required when called:    1
   527 ;; This function calls:
   528 ;;		_lcd_data
   529 ;; This function is called by:
   530 ;;		_main
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           
   535                           ;psect for function _lcd_str
   536  065D                     _lcd_str:	
   537                           
   538                           ;incstack = 0
   539                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   540                           ;lcd_str@str stored from wreg
   541  065D  00F5               	movwf	lcd_str@str
   542                           
   543                           ;ProjectClear.c: 72: unsigned char i;
   544                           ;ProjectClear.c: 73: for(i = 0; i < n; i++)
   545  065E  01F6               	clrf	lcd_str@i
   546  065F                     l657:	
   547  065F  0873               	movf	lcd_str@n,w
   548  0660  0276               	subwf	lcd_str@i,w
   549  0661  1803               	btfsc	3,0
   550  0662  0008               	return
   551                           
   552                           ;ProjectClear.c: 74: {
   553                           ;ProjectClear.c: 75: lcd_data(str[i]);
   554  0663  0876               	movf	lcd_str@i,w
   555  0664  0775               	addwf	lcd_str@str,w
   556  0665  0084               	movwf	4
   557  0666  120A  118A  2003  120A  118A  	fcall	stringdir
   558  066B  120A  118A  26CC  120A  118A  	fcall	_lcd_data
   559  0670  3001               	movlw	1
   560  0671  00F4               	movwf	??_lcd_str
   561  0672  0874               	movf	??_lcd_str,w
   562  0673  07F6               	addwf	lcd_str@i,f
   563  0674  2E5F               	goto	l657
   564  0675                     __end_of_lcd_str:	
   565                           
   566                           	psect	text2
   567  06CC                     __ptext2:	
   568 ;; *************** function _lcd_data *****************
   569 ;; Defined at:
   570 ;;		line 43 in file "ProjectClear.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  data            1    wreg     unsigned char 
   573 ;; Auto vars:     Size  Location     Type
   574 ;;  data            1    2[COMMON] unsigned char 
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg, status,2, status,0
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   584 ;;      Params:         0       0       0       0       0
   585 ;;      Locals:         1       0       0       0       0
   586 ;;      Temps:          2       0       0       0       0
   587 ;;      Totals:         3       0       0       0       0
   588 ;;Total ram usage:        3 bytes
   589 ;; Hardware stack levels used:    1
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_lcd_str
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           
   598                           ;psect for function _lcd_data
   599  06CC                     _lcd_data:	
   600                           
   601                           ;incstack = 0
   602                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
   603                           ;lcd_data@data stored from wreg
   604  06CC  00F2               	movwf	lcd_data@data
   605                           
   606                           ;ProjectClear.c: 45: PORTD = (data & 0xF0);
   607  06CD  0872               	movf	lcd_data@data,w
   608  06CE  39F0               	andlw	240
   609  06CF  1283               	bcf	3,5	;RP0=0, select bank0
   610  06D0  1303               	bcf	3,6	;RP1=0, select bank0
   611  06D1  0088               	movwf	8	;volatile
   612                           
   613                           ;ProjectClear.c: 46: PORTEbits.RE0 = 1;
   614  06D2  1409               	bsf	9,0	;volatile
   615                           
   616                           ;ProjectClear.c: 48: PORTEbits.RE1 = 1;
   617  06D3  1489               	bsf	9,1	;volatile
   618                           
   619                           ;ProjectClear.c: 49: _delay((unsigned long)((10)*(20000000/4000.0)));
   620  06D4  3041               	movlw	65
   621  06D5  00F1               	movwf	??_lcd_data+1
   622  06D6  30EE               	movlw	238
   623  06D7  00F0               	movwf	??_lcd_data
   624  06D8                     u387:	
   625  06D8  0BF0               	decfsz	??_lcd_data,f
   626  06D9  2ED8               	goto	u387
   627  06DA  0BF1               	decfsz	??_lcd_data+1,f
   628  06DB  2ED8               	goto	u387
   629  06DC  0000               	nop
   630                           
   631                           ;ProjectClear.c: 50: PORTEbits.RE0 = 0;
   632  06DD  1283               	bcf	3,5	;RP0=0, select bank0
   633  06DE  1303               	bcf	3,6	;RP1=0, select bank0
   634  06DF  1009               	bcf	9,0	;volatile
   635                           
   636                           ;ProjectClear.c: 51: PORTD = ((data<<4) & 0xF0);
   637  06E0  0872               	movf	lcd_data@data,w
   638  06E1  00F0               	movwf	??_lcd_data
   639  06E2  3003               	movlw	3
   640  06E3                     u25:	
   641  06E3  1003               	clrc
   642  06E4  0DF0               	rlf	??_lcd_data,f
   643  06E5  3EFF               	addlw	-1
   644  06E6  1D03               	skipz
   645  06E7  2EE3               	goto	u25
   646  06E8  1003               	clrc
   647  06E9  0D70               	rlf	??_lcd_data,w
   648  06EA  39F0               	andlw	240
   649  06EB  0088               	movwf	8	;volatile
   650                           
   651                           ;ProjectClear.c: 52: PORTEbits.RE0 = 1;
   652  06EC  1409               	bsf	9,0	;volatile
   653                           
   654                           ;ProjectClear.c: 54: PORTEbits.RE1 = 1;
   655  06ED  1489               	bsf	9,1	;volatile
   656                           
   657                           ;ProjectClear.c: 55: _delay((unsigned long)((10)*(20000000/4000.0)));
   658  06EE  3041               	movlw	65
   659  06EF  00F1               	movwf	??_lcd_data+1
   660  06F0  30EE               	movlw	238
   661  06F1  00F0               	movwf	??_lcd_data
   662  06F2                     u397:	
   663  06F2  0BF0               	decfsz	??_lcd_data,f
   664  06F3  2EF2               	goto	u397
   665  06F4  0BF1               	decfsz	??_lcd_data+1,f
   666  06F5  2EF2               	goto	u397
   667  06F6  0000               	nop
   668                           
   669                           ;ProjectClear.c: 56: PORTEbits.RE0 = 0;
   670  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   671  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   672  06F9  1009               	bcf	9,0	;volatile
   673  06FA  0008               	return
   674  06FB                     __end_of_lcd_data:	
   675                           
   676                           	psect	text3
   677  0675                     __ptext3:	
   678 ;; *************** function _lcd_init *****************
   679 ;; Defined at:
   680 ;;		line 60 in file "ProjectClear.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0, pclath, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0
   696 ;;      Temps:          2       0       0       0       0
   697 ;;      Totals:         2       0       0       0       0
   698 ;;Total ram usage:        2 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    1
   701 ;; This function calls:
   702 ;;		_lcd_command
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _lcd_init
   710  0675                     _lcd_init:	
   711                           
   712                           ;ProjectClear.c: 62: lcd_command(0x02);
   713                           
   714                           ;incstack = 0
   715                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   716  0675  3002               	movlw	2
   717  0676  120A  118A  269D  120A  118A  	fcall	_lcd_command
   718                           
   719                           ;ProjectClear.c: 63: lcd_command(0x28);
   720  067B  3028               	movlw	40
   721  067C  120A  118A  269D  120A  118A  	fcall	_lcd_command
   722                           
   723                           ;ProjectClear.c: 64: lcd_command(0x0C);
   724  0681  300C               	movlw	12
   725  0682  120A  118A  269D  120A  118A  	fcall	_lcd_command
   726                           
   727                           ;ProjectClear.c: 65: lcd_command(0x06);
   728  0687  3006               	movlw	6
   729  0688  120A  118A  269D  120A  118A  	fcall	_lcd_command
   730                           
   731                           ;ProjectClear.c: 66: lcd_command(0x01);
   732  068D  3001               	movlw	1
   733  068E  120A  118A  269D  120A  118A  	fcall	_lcd_command
   734                           
   735                           ;ProjectClear.c: 67: _delay((unsigned long)((20)*(20000000/4000.0)));
   736  0693  3082               	movlw	130
   737  0694  00F4               	movwf	??_lcd_init+1
   738  0695  30DD               	movlw	221
   739  0696  00F3               	movwf	??_lcd_init
   740  0697                     u407:	
   741  0697  0BF3               	decfsz	??_lcd_init,f
   742  0698  2E97               	goto	u407
   743  0699  0BF4               	decfsz	??_lcd_init+1,f
   744  069A  2E97               	goto	u407
   745  069B  2E9C               	nop2
   746  069C  0008               	return
   747  069D                     __end_of_lcd_init:	
   748                           
   749                           	psect	text4
   750  069D                     __ptext4:	
   751 ;; *************** function _lcd_command *****************
   752 ;; Defined at:
   753 ;;		line 27 in file "ProjectClear.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  cmd             1    wreg     unsigned char 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  cmd             1    2[COMMON] unsigned char 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0       0       0       0       0
   768 ;;      Locals:         1       0       0       0       0
   769 ;;      Temps:          2       0       0       0       0
   770 ;;      Totals:         3       0       0       0       0
   771 ;;Total ram usage:        3 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_lcd_init
   777 ;;		_main
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _lcd_command
   783  069D                     _lcd_command:	
   784                           
   785                           ;incstack = 0
   786                           ; Regs used in _lcd_command: [wreg+status,2+status,0]
   787                           ;lcd_command@cmd stored from wreg
   788  069D  00F2               	movwf	lcd_command@cmd
   789                           
   790                           ;ProjectClear.c: 29: PORTD = (cmd & 0xF0);
   791  069E  0872               	movf	lcd_command@cmd,w
   792  069F  39F0               	andlw	240
   793  06A0  1283               	bcf	3,5	;RP0=0, select bank0
   794  06A1  1303               	bcf	3,6	;RP1=0, select bank0
   795  06A2  0088               	movwf	8	;volatile
   796                           
   797                           ;ProjectClear.c: 30: PORTEbits.RE0 = 1;
   798  06A3  1409               	bsf	9,0	;volatile
   799                           
   800                           ;ProjectClear.c: 31: _delay((unsigned long)((10)*(20000000/4000.0)));
   801  06A4  3041               	movlw	65
   802  06A5  00F1               	movwf	??_lcd_command+1
   803  06A6  30EE               	movlw	238
   804  06A7  00F0               	movwf	??_lcd_command
   805  06A8                     u417:	
   806  06A8  0BF0               	decfsz	??_lcd_command,f
   807  06A9  2EA8               	goto	u417
   808  06AA  0BF1               	decfsz	??_lcd_command+1,f
   809  06AB  2EA8               	goto	u417
   810  06AC  0000               	nop
   811                           
   812                           ;ProjectClear.c: 32: PORTEbits.RE1 = 0;
   813  06AD  1283               	bcf	3,5	;RP0=0, select bank0
   814  06AE  1303               	bcf	3,6	;RP1=0, select bank0
   815  06AF  1089               	bcf	9,1	;volatile
   816                           
   817                           ;ProjectClear.c: 34: PORTEbits.RE0 = 0;
   818  06B0  1009               	bcf	9,0	;volatile
   819                           
   820                           ;ProjectClear.c: 35: PORTD = ((cmd<<4) & 0xF0);
   821  06B1  0872               	movf	lcd_command@cmd,w
   822  06B2  00F0               	movwf	??_lcd_command
   823  06B3  3003               	movlw	3
   824  06B4                     u15:	
   825  06B4  1003               	clrc
   826  06B5  0DF0               	rlf	??_lcd_command,f
   827  06B6  3EFF               	addlw	-1
   828  06B7  1D03               	skipz
   829  06B8  2EB4               	goto	u15
   830  06B9  1003               	clrc
   831  06BA  0D70               	rlf	??_lcd_command,w
   832  06BB  39F0               	andlw	240
   833  06BC  0088               	movwf	8	;volatile
   834                           
   835                           ;ProjectClear.c: 36: PORTEbits.RE0 = 1;
   836  06BD  1409               	bsf	9,0	;volatile
   837                           
   838                           ;ProjectClear.c: 38: PORTEbits.RE1 = 0;
   839  06BE  1089               	bcf	9,1	;volatile
   840                           
   841                           ;ProjectClear.c: 39: _delay((unsigned long)((10)*(20000000/4000.0)));
   842  06BF  3041               	movlw	65
   843  06C0  00F1               	movwf	??_lcd_command+1
   844  06C1  30EE               	movlw	238
   845  06C2  00F0               	movwf	??_lcd_command
   846  06C3                     u427:	
   847  06C3  0BF0               	decfsz	??_lcd_command,f
   848  06C4  2EC3               	goto	u427
   849  06C5  0BF1               	decfsz	??_lcd_command+1,f
   850  06C6  2EC3               	goto	u427
   851  06C7  0000               	nop
   852                           
   853                           ;ProjectClear.c: 40: PORTEbits.RE0 = 0;
   854  06C8  1283               	bcf	3,5	;RP0=0, select bank0
   855  06C9  1303               	bcf	3,6	;RP1=0, select bank0
   856  06CA  1009               	bcf	9,0	;volatile
   857  06CB  0008               	return
   858  06CC                     __end_of_lcd_command:	
   859                           
   860                           	psect	text5
   861  06FB                     __ptext5:	
   862 ;; *************** function ___awdiv *****************
   863 ;; Defined at:
   864 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  divisor         2    0[COMMON] int 
   867 ;;  dividend        2    2[COMMON] int 
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  quotient        2    7[COMMON] int 
   870 ;;  sign            1    6[COMMON] unsigned char 
   871 ;;  counter         1    5[COMMON] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  2    0[COMMON] int 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         4       0       0       0       0
   882 ;;      Locals:         4       0       0       0       0
   883 ;;      Temps:          1       0       0       0       0
   884 ;;      Totals:         9       0       0       0       0
   885 ;;Total ram usage:        9 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           
   895                           ;psect for function ___awdiv
   896  06FB                     ___awdiv:	
   897                           
   898                           ;incstack = 0
   899                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   900  06FB  01F6               	clrf	___awdiv@sign
   901  06FC  1FF1               	btfss	___awdiv@divisor+1,7
   902  06FD  2F05               	goto	l667
   903  06FE  09F0               	comf	___awdiv@divisor,f
   904  06FF  09F1               	comf	___awdiv@divisor+1,f
   905  0700  0AF0               	incf	___awdiv@divisor,f
   906  0701  1903               	skipnz
   907  0702  0AF1               	incf	___awdiv@divisor+1,f
   908  0703  01F6               	clrf	___awdiv@sign
   909  0704  0AF6               	incf	___awdiv@sign,f
   910  0705                     l667:	
   911  0705  1FF3               	btfss	___awdiv@dividend+1,7
   912  0706  2F10               	goto	l673
   913  0707  09F2               	comf	___awdiv@dividend,f
   914  0708  09F3               	comf	___awdiv@dividend+1,f
   915  0709  0AF2               	incf	___awdiv@dividend,f
   916  070A  1903               	skipnz
   917  070B  0AF3               	incf	___awdiv@dividend+1,f
   918  070C  3001               	movlw	1
   919  070D  00F4               	movwf	??___awdiv
   920  070E  0874               	movf	??___awdiv,w
   921  070F  06F6               	xorwf	___awdiv@sign,f
   922  0710                     l673:	
   923  0710  01F7               	clrf	___awdiv@quotient
   924  0711  01F8               	clrf	___awdiv@quotient+1
   925  0712  0870               	movf	___awdiv@divisor,w
   926  0713  0471               	iorwf	___awdiv@divisor+1,w
   927  0714  1903               	btfsc	3,2
   928  0715  2F47               	goto	l695
   929  0716  01F5               	clrf	___awdiv@counter
   930  0717  0AF5               	incf	___awdiv@counter,f
   931  0718                     l683:	
   932  0718  1BF1               	btfsc	___awdiv@divisor+1,7
   933  0719  2F26               	goto	l685
   934  071A  3001               	movlw	1
   935  071B                     u225:	
   936  071B  1003               	clrc
   937  071C  0DF0               	rlf	___awdiv@divisor,f
   938  071D  0DF1               	rlf	___awdiv@divisor+1,f
   939  071E  3EFF               	addlw	-1
   940  071F  1D03               	skipz
   941  0720  2F1B               	goto	u225
   942  0721  3001               	movlw	1
   943  0722  00F4               	movwf	??___awdiv
   944  0723  0874               	movf	??___awdiv,w
   945  0724  07F5               	addwf	___awdiv@counter,f
   946  0725  2F18               	goto	l683
   947  0726                     l685:	
   948  0726  3001               	movlw	1
   949  0727                     u245:	
   950  0727  1003               	clrc
   951  0728  0DF7               	rlf	___awdiv@quotient,f
   952  0729  0DF8               	rlf	___awdiv@quotient+1,f
   953  072A  3EFF               	addlw	-1
   954  072B  1D03               	skipz
   955  072C  2F27               	goto	u245
   956  072D  0871               	movf	___awdiv@divisor+1,w
   957  072E  0273               	subwf	___awdiv@dividend+1,w
   958  072F  1D03               	skipz
   959  0730  2F33               	goto	u255
   960  0731  0870               	movf	___awdiv@divisor,w
   961  0732  0272               	subwf	___awdiv@dividend,w
   962  0733                     u255:	
   963  0733  1C03               	skipc
   964  0734  2F3C               	goto	l691
   965  0735  0870               	movf	___awdiv@divisor,w
   966  0736  02F2               	subwf	___awdiv@dividend,f
   967  0737  0871               	movf	___awdiv@divisor+1,w
   968  0738  1C03               	skipc
   969  0739  03F3               	decf	___awdiv@dividend+1,f
   970  073A  02F3               	subwf	___awdiv@dividend+1,f
   971  073B  1477               	bsf	___awdiv@quotient,0
   972  073C                     l691:	
   973  073C  3001               	movlw	1
   974  073D                     u265:	
   975  073D  1003               	clrc
   976  073E  0CF1               	rrf	___awdiv@divisor+1,f
   977  073F  0CF0               	rrf	___awdiv@divisor,f
   978  0740  3EFF               	addlw	-1
   979  0741  1D03               	skipz
   980  0742  2F3D               	goto	u265
   981  0743  3001               	movlw	1
   982  0744  02F5               	subwf	___awdiv@counter,f
   983  0745  1D03               	btfss	3,2
   984  0746  2F26               	goto	l685
   985  0747                     l695:	
   986  0747  0876               	movf	___awdiv@sign,w
   987  0748  1903               	btfsc	3,2
   988  0749  2F4F               	goto	l699
   989  074A  09F7               	comf	___awdiv@quotient,f
   990  074B  09F8               	comf	___awdiv@quotient+1,f
   991  074C  0AF7               	incf	___awdiv@quotient,f
   992  074D  1903               	skipnz
   993  074E  0AF8               	incf	___awdiv@quotient+1,f
   994  074F                     l699:	
   995  074F  0878               	movf	___awdiv@quotient+1,w
   996  0750  00F1               	movwf	?___awdiv+1
   997  0751  0877               	movf	___awdiv@quotient,w
   998  0752  00F0               	movwf	?___awdiv
   999  0753  0008               	return
  1000  0754                     __end_of___awdiv:	
  1001  007E                     btemp	set	126	;btemp
  1002  007E                     wtemp0	set	126


Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_str@str	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _lcd_str->_lcd_data
    _lcd_init->_lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     791
                                              9 COMMON     5     5      0
                            ___awdiv
                        _lcd_command
                           _lcd_init
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              4     3      1     280
                                              3 COMMON     4     3      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      30
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _lcd_command
   _lcd_init
     _lcd_command
   _lcd_str
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Jun 21 00:32:00 2024

                      pc 0002             lcd_data@data 0072              __CFG_CP$OFF 0000  
                     l43 07B7                       l46 07BA                       l49 07EB  
                     u15 06B4                       u25 06E3             ___awdiv@sign 0076  
                     fsr 0004                      l713 0770                      l743 07EE  
                    l673 0710                      l657 065F                      l691 073C  
                    l683 0718                      l667 0705                      l685 0726  
                    l695 0747                      l699 074F                      u225 071B  
                    u245 0727                      u255 0733                      u407 0697  
                    u265 073D                      u417 06A8                      u337 0769  
           __CFG_CPD$OFF 0000                      u427 06C3                      u347 0786  
                    u357 07A3                      u367 07B1                      u377 07F4  
                    u387 06D8                      u397 06F2                      fsr0 0004  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     STR_1 0009  
                   STR_2 0009             __CFG_WRT$OFF 0000                     _main 0754  
                   btemp 007E                     start 0000             main@distance 007C  
                  ?_main 0070          __end_of___awdiv 0754            __CFG_WDTE$OFF 0000  
        ___awdiv@divisor 0070                    _T1CON 0010          ___awdiv@counter 0075  
                  _TMR1H 000F                    _TMR1L 000E                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
        __end_of_lcd_str 0675           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0079           lcd_command@cmd 0072  
       ___awdiv@dividend 0072                   _TMR1ON 0080           __CFG_PWRTE$OFF 0000  
       __end_of_lcd_data 06FB         __end_of_lcd_init 069D     __size_of_lcd_command 002F  
              ??___awdiv 0074         ___awdiv@quotient 0077                ??_lcd_str 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0754  
              ?_lcd_data 0070                ?_lcd_init 0070               __stringtab 0003  
                ___awdiv 06FB                  __ptext1 065D                  __ptext2 06CC  
                __ptext3 0675                  __ptext4 069D                  __ptext5 06FB  
                _lcd_str 065D               ??_lcd_data 0070               ??_lcd_init 0073  
   end_of_initialization 07FC                _PORTBbits 0006                _PORTDbits 0008  
              _PORTEbits 0009            ??_lcd_command 0070               lcd_str@str 0075  
    start_initialization 07FC      __end_of_lcd_command 06CC                ___latbits 0002  
      __size_of_lcd_data 002F        __size_of_lcd_init 0028                 ?___awdiv 0070  
              __pstrings 0003                 ?_lcd_str 0073              _lcd_command 069D  
            __stringbase 0008         __size_of___awdiv 0059       __end_of__stringtab 0009  
       __size_of_lcd_str 0018                 _lcd_data 06CC                 _lcd_init 0675  
          __size_of_main 00A8                 lcd_str@i 0076                 lcd_str@n 0073  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
           ?_lcd_command 0070  
